# Bar plot for total sales by city with only the highest sales bar colored blue
ggplot(total_sales_by_city, aes(x = reorder(City, Total_Sales), y = Total_Sales, fill = City)) +
geom_bar(stat = "identity") +
scale_fill_manual(values = ifelse(total_sales_by_city$City == top_city, "skyblue", "gray")) +
geom_text(aes(label = Total_Sales), vjust = -0.5, size = 3) +
theme_minimal() +
labs(title = "Total Sales by City", x = "City", y = "Total Sales") +
theme(axis.text.x = element_text(angle = 45, hjust = 1))
library(ggplot2)
# Create the data frame from the provided table
city_sales <- data.frame(
City = c("San Francisco", "Los Angeles", "New York City", "Boston", "Atlanta", "Dallas", "Seattle", "Portland", "Austin"),
Total_Sales = c(8262204, 5452571, 4664317, 3661642, 2795499, 2767975, 2747755, 2320491, 1819582)
)
# Determine the city with the highest total sales
top_city <- city_sales$City[which.max(city_sales$Total_Sales)]
# Bar plot for total sales by city with only the highest sales bar colored blue
ggplot(city_sales, aes(x = reorder(City, Total_Sales), y = Total_Sales, fill = City)) +
geom_bar(stat = "identity") +
scale_fill_manual(values = ifelse(city_sales$City == top_city, "skyblue", "gray")) +
geom_text(aes(label = Total_Sales), vjust = -0.5, size = 3) +
theme_minimal() +
labs(title = "Total Sales by City", x = "City", y = "Total Sales") +
theme(axis.text.x = element_text(angle = 45, hjust = 1))
library(ggplot2)
# Create the data frame from the provided table
city_sales <- data.frame(
City = c("San Francisco", "Los Angeles", "New York City", "Boston", "Atlanta", "Dallas", "Seattle", "Portland", "Austin"),
Total_Sales = c(8262204, 5452571, 4664317, 3661642, 2795499, 2767975, 2747755, 2320491, 1819582)
)
# Determine the city with the highest total sales
top_city <- city_sales$City[which.max(city_sales$Total_Sales)]
# Bar plot for total sales by city with only the highest sales bar colored blue
ggplot(city_sales, aes(x = reorder(City, Total_Sales), y = Total_Sales, fill = City)) +
geom_bar(stat = "identity") +
scale_fill_manual(values = ifelse(city_sales$City == "San Francisco", "skyblue", "gray")) +
geom_text(aes(label = Total_Sales), vjust = -0.5, size = 3) +
theme_minimal() +
labs(title = "Total Sales by City", x = "City", y = "Total Sales") +
theme(axis.text.x = element_text(angle = 45, hjust = 1))
library(ggplot2)
# Create the data frame from the provided table
city_sales <- data.frame(
City = c("San Francisco", "Los Angeles", "New York City", "Boston", "Atlanta", "Dallas", "Seattle", "Portland", "Austin"),
Total_Sales = c(8262204, 5452571, 4664317, 3661642, 2795499, 2767975, 2747755, 2320491, 1819582)
)
# Determine the city with the highest total sales
top_city <- city_sales$City[which.max(city_sales$Total_Sales)]
# Bar plot for total sales by city with only the highest sales bar colored blue
ggplot(city_sales, aes(x = reorder(City, Total_Sales), y = Total_Sales, fill = City)) +
geom_bar(stat = "identity") +
geom_text(aes(label = Total_Sales), vjust = -0.5, size = 3) +
theme_minimal() +
labs(title = "Total Sales by City", x = "City", y = "Total Sales") +
theme(axis.text.x = element_text(angle = 45, hjust = 1))
library(ggplot2)
# Create the data frame from the provided table
city_sales <- data.frame(
City = c("San Francisco", "Los Angeles", "New York City", "Boston", "Atlanta", "Dallas", "Seattle", "Portland", "Austin"),
Total_Sales = c(8262204, 5452571, 4664317, 3661642, 2795499, 2767975, 2747755, 2320491, 1819582)
)
# Determine the city with the highest total sales
top_city <- city_sales$City[which.max(city_sales$Total_Sales)]
# Determine the city with the highest total sales
top_city <- city_sales$City[which.max(city_sales$Total_Sales)]
# Bar plot for total sales by city with only San Francisco colored blue
ggplot(city_sales, aes(x = reorder(City, Total_Sales), y = Total_Sales, fill = City)) +
geom_bar(stat = "identity") +
scale_fill_manual(values = ifelse(city_sales$City == "San Francisco", "skyblue", "gray")) +
geom_text(aes(label = Total_Sales), vjust = -0.5, size = 3) +
theme_minimal() +
labs(title = "Total Sales by City", x = "City", y = "Total Sales") +
theme(axis.text.x = element_text(angle = 45, hjust = 1))
library(ggplot2)
# Create the data frame from the provided table
city_sales <- data.frame(
City = c("San Francisco", "Los Angeles", "New York City", "Boston", "Atlanta", "Dallas", "Seattle", "Portland", "Austin"),
Total_Sales = c(8262204, 5452571, 4664317, 3661642, 2795499, 2767975, 2747755, 2320491, 1819582)
)
# Determine the city with the highest total sales
top_city <- city_sales$City[which.max(city_sales$Total_Sales)]
# Bar plot for total sales by city with only the highest sales bar colored blue
ggplot(city_sales, aes(x = reorder(City, Total_Sales), y = Total_Sales, fill = City)) +
geom_bar(stat = "identity") +
geom_text(aes(label = Total_Sales), vjust = -0.5, size = 3) +
theme_minimal() +
labs(title = "Total Sales by City", x = "City", y = "Total Sales") +
theme(axis.text.x = element_text(angle = 45, hjust = 1))
top_city
library(ggplot2)
# Create the data frame from the provided table
city_sales <- data.frame(
City = c("San Francisco", "Los Angeles", "New York City", "Boston", "Atlanta", "Dallas", "Seattle", "Portland", "Austin"),
Total_Sales = c(8262204, 5452571, 4664317, 3661642, 2795499, 2767975, 2747755, 2320491, 1819582)
)
# Determine the city with the highest total sales
top_city <- city_sales$City[which.max(city_sales$Total_Sales)]
# Bar plot with conditional coloring
ggplot(total_sales_by_city, aes(x = reorder(City, Total_Sales), y = Total_Sales, fill = City)) +
geom_bar(stat = "identity") +
scale_fill_manual(values = c(ifelse(total_sales_by_city$City == top_city, "skyblue", "gray"))) +
geom_text(aes(label = Total_Sales), vjust = -0.5, size = 3) +
theme_minimal() +
labs(title = "Total Sales by City", x = "City", y = "Total Sales") +
theme(axis.text.x = element_text(angle = 45, hjust = 1))
# Bar plot with conditional coloring
ggplot(total_sales_by_city, aes(x = reorder(City, Total_Sales), y = Total_Sales, fill = City)) +
geom_bar(stat = "identity") +
scale_fill_manual(values = c(ifelse(total_sales_by_city$City == top_city, "skyblue", "gray"))) +
geom_text(aes(label = Total_Sales), vjust = -0.5, size = 3) +
theme_minimal() +
labs(title = "Total Sales by City", x = "City", y = "Total Sales") +
theme(axis.text.x = element_text(angle = 45, hjust = 1))
# Bar plot with conditional coloring
ggplot(total_sales_by_city, aes(x = reorder(City, Total_Sales), y = Total_Sales, fill = City)) +
geom_bar(stat = "identity") +
scale_fill_manual(values = c(ifelse(total_sales_by_city$City[1] == top_city, "skyblue", "gray"))) +
geom_text(aes(label = Total_Sales), vjust = -0.5, size = 3) +
theme_minimal() +
labs(title = "Total Sales by City", x = "City", y = "Total Sales") +
theme(axis.text.x = element_text(angle = 45, hjust = 1))
# Bar plot with conditional coloring
ggplot(total_sales_by_city, aes(x = reorder(City, Total_Sales), y = Total_Sales, fill = City)) +
geom_bar(stat = "identity") +
scale_fill_manual(values = c(ifelse( top_city == "San Francisco" , "skyblue", "gray"))) +
geom_text(aes(label = Total_Sales), vjust = -0.5, size = 3) +
theme_minimal() +
labs(title = "Total Sales by City", x = "City", y = "Total Sales") +
theme(axis.text.x = element_text(angle = 45, hjust = 1))
# Bar plot with conditional coloring
ggplot(total_sales_by_city, aes(x = reorder(City, Total_Sales), y = Total_Sales, fill = City)) +
geom_bar(stat = "identity") +
scale_fill_manual(values = c(ifelse( total_sales_by_city$City == "San Francisco" , "skyblue", "gray"))) +
geom_text(aes(label = Total_Sales), vjust = -0.5, size = 3) +
theme_minimal() +
labs(title = "Total Sales by City", x = "City", y = "Total Sales") +
theme(axis.text.x = element_text(angle = 45, hjust = 1))
# Bar plot with conditional coloring
ggplot(total_sales_by_city, aes(y = reorder(City, Total_Sales), x = Total_Sales, fill = City)) +
geom_bar(stat = "identity") +
scale_fill_manual(values = c(ifelse( total_sales_by_city$City == "San Francisco" , "skyblue", "gray"))) +
geom_text(aes(label = Total_Sales), hjust = -0.5, size = 3) +
theme_minimal() +
labs(title = "Total Sales by City", x = "City", y = "Total Sales") +
theme(axis.text.x = element_text(angle = 45, hjust = 1))
total_sales_by_city
# Bar plot with conditional coloring
ggplot(total_sales_by_city, aes(y = reorder(City, Total_Sales), x = Total_Sales, fill = City)) +
geom_bar(stat = "identity") +
geom_text(aes(label = Total_Sales), hjust = -0.5, size = 3) +
theme_minimal() +
labs(title = "Total Sales by City", x = "City", y = "Total Sales") +
theme(axis.text.x = element_text(angle = 45, hjust = 1))
total_sales_by_city <- data %>%
group_by(City) %>%
summarise(Total_Sales = sum(Sales)) %>%
arrange(desc(Total_Sales))
# Determine the city with the highest total sales
top_city <- total_sales_by_city$City[1]
total_sales_by_city
# Bar plot with conditional coloring
ggplot(total_sales_by_city, aes(y = reorder(City, Total_Sales), x = Total_Sales, fill = City)) +
geom_bar(stat = "identity") +
geom_text(aes(label = Total_Sales), hjust = -0.5, size = 3) +
theme_minimal() +
labs(title = "Total Sales by City", x = "City", y = "Total Sales") +
theme(axis.text.x = element_text(angle = 45, hjust = 1))
total_sales_by_city <- data %>%
group_by(City) %>%
summarise(Total_Sales = sum(Sales)) %>%
arrange(desc(Total_Sales))
# Determine the city with the highest total sales
top_city <- total_sales_by_city$City[1]
# Bar plot with conditional coloring
ggplot(total_sales_by_city, aes(y = reorder(City, Total_Sales), x = Total_Sales, fill = City)) +
geom_bar(stat = "identity") +
geom_text(aes(label = Total_Sales), hjust = -0.5, size = 3) +
theme_minimal() +
labs(title = "Total Sales by City", x = "City", y = "Total Sales") +
theme(axis.text.x = element_text(angle = 45, hjust = 1))
total_sales_by_city <- data %>%
group_by(City) %>%
summarise(Total_Sales = sum(Sales)) %>%
arrange(desc(Total_Sales))
# Determine the city with the highest total sales
top_city <- total_sales_by_city$City[1]
# Bar plot with conditional coloring
ggplot(total_sales_by_city, aes(y = reorder(City, Total_Sales), x = Total_Sales, fill = City)) +
geom_bar(stat = "identity") +
geom_text(aes(label = Total_Sales), hjust = -0.5, size = 3) +
theme_minimal() +
labs(title = "Total Sales by City", x = "City", y = "Total Sales") +
theme(axis.text.x = element_text(angle = 45, hjust = 1))
# Filter data for the top-selling city
top_selling_city_data <- data %>%
filter(City == highest_sales_city_name)
library(dplyr)
# Filter data for the top-selling city
top_selling_city_data <- data %>%
filter(City == highest_sales_city_name)
glimpse(raw_file)
# 1. Calculate total sales by city
total_sales_by_city <- data %>%
group_by(City) %>%
summarise(Total_Sales = sum(Sales)) %>%
arrange(desc(Total_Sales))
total_sales_by_city
# 2. Determine the city with the highest total sales
top_city <- total_sales_by_city$City[1]
top_city
# 4. Calculate average order value in the top-selling city
average_order_value <- mean(top_selling_city_data$Sales)
# 3. Filter data for the top-selling city
top_selling_city_data <- data %>%
filter(City == top_city)
top_selling_city_data
# 4. Calculate average order value in the top-selling city
average_order_value <- mean(top_selling_city_data$Sales)
# Print the average order value
average_order_value
knitr::opts_chunk$set(echo = TRUE)
quantity_ordered_stats <- data %>%
summarise(
Mean = mean(Quantity.Ordered),
Median = median(Quantity.Ordered),
SD = sd(Quantity.Ordered),
Min = min(Quantity.Ordered),
Max = max(Quantity.Ordered)
)
library(dplyr)
quantity_ordered_stats <- data %>%
summarise(
Mean = mean(Quantity.Ordered),
Median = median(Quantity.Ordered),
SD = sd(Quantity.Ordered),
Min = min(Quantity.Ordered),
Max = max(Quantity.Ordered)
)
quantity_ordered_stats
library(dplyr)
quantity_ordered_stats <- data %>%
summarise(
Mean = mean(Quantity.Ordered),
Median = median(Quantity.Ordered),
SD = sd(Quantity.Ordered),
Min = min(Quantity.Ordered),
Max = max(Quantity.Ordered)
)
quantity_ordered_stats
library(dplyr)
raw_file <- read.csv("C:/Users/SAIL/Downloads/Sales Data.csv")
data <- raw_file |>
na.omit() |>
unique()
quantity_ordered_stats <- data %>%
summarise(
Mean = mean(Quantity.Ordered),
Median = median(Quantity.Ordered),
SD = sd(Quantity.Ordered),
Min = min(Quantity.Ordered),
Max = max(Quantity.Ordered)
)
quantity_ordered_stats
library(dplyr)
raw_file <- read.csv("C:/Users/SAIL/Downloads/Sales Data.csv")
data <- raw_file |>
na.omit() |>
unique()
quantity_ordered_stats <- data %>%
summarise(
Mean = mean(Quantity.Ordered),
Median = median(Quantity.Ordered),
SD = sd(Quantity.Ordered),
Min = min(Quantity.Ordered),
Max = max(Quantity.Ordered)
)
quantity_ordered_stats
##3
quantity_ordered_stats <- data %>%
summarise(
Mean = mean(Quantity.Ordered),
Median = median(Quantity.Ordered),
SD = sd(Quantity.Ordered),
Min = min(Quantity.Ordered),
Max = max(Quantity.Ordered)
)
quantity_ordered_stats
knitr::opts_chunk$set(echo = TRUE)
library(dplyr)
raw_file <- read.csv("C:/Users/SAIL/Downloads/Sales Data.csv")
data <- raw_file |>
na.omit() |>
unique()
quantity_ordered_stats <- data %>%
summarise(
Mean = mean(Quantity.Ordered),
Median = median(Quantity.Ordered),
SD = sd(Quantity.Ordered),
Min = min(Quantity.Ordered),
Max = max(Quantity.Ordered)
)
quantity_ordered_stats
# Calculate total sales by city
total_sales_by_city <- data %>%
group_by(City) %>%
summarise(Total_Sales = sum(Sales)) %>%
arrange(desc(Total_Sales))
# Determine the city with the highest total sales
top_city <- total_sales_by_city$City[9]
top_city
total_sales_by_city
View(clean_data)
glimpse(clean_data)
install.packages("lubridate")
library(lubridate)
# Convert Order.Date to datetime format
data$Order.Date <- as.POSIXct(data$Order.Date, format = "%Y-%m-%d %H:%M:%S")
# Extract month from Order.Date
data$Month <- month(data$Order.Date, label = TRUE)
# Summarize total sales by month
monthly_sales <- data %>%
group_by(Month) %>%
summarise(Total.Sales = sum(Sales))
monthly_sales
monthly_sales |>
ggplot(aes(x = Month)) +
geom_bar()
library(ggplot2)
monthly_sales |>
ggplot(aes(x = Month)) +
geom_bar()
monthly_sales |>
ggplot(aes(x = Monthy , y = Total.Sales)) +
geom_bar()
monthly_sales |>
ggplot(aes(x = Month , y = Total.Sales)) +
geom_bar()
monthly_sales |>
ggplot(aes(x = Month , y = Total.Sales)) +
geom_bar()
monthly_sales |>
ggplot(aes( y = Total.Sales)) +
geom_bar()
data.frame(monthly_sales) |>
ggplot(aes(x = Month , y = Total.Sales)) +
geom_bar()
ggplot(monthly_sales, aes(x = Month, y = Total.Sales, fill = Month)) +
geom_bar(stat = "identity") +
ggtitle("Total Sales by Month") +
xlab("Month") +
ylab("Total Sales") +
theme_minimal()
ggplot(monthly_sales, aes(x = Month, y = Total.Sales)) +
geom_bar(stat = "identity") +
ggtitle("Total Sales by Month") +
xlab("Month") +
ylab("Total Sales") +
theme_minimal()
data.frame(monthly_sales) |>
ggplot(aes(x = Month , y = Total.Sales)) +
geom_bar(stat="identity")
# Find the month with the highest total sales
max_sales_month <- monthly_sales %>%
filter(Total.Sales == max(Total.Sales))
# Print the month with the highest total sales
print(max_sales_month)
# Check for seasonal patterns in sales
seasonal_sales <- data %>%
group_by(Month) %>%
summarise(Average.Sales = mean(Sales))
seasonal_sales
ggplot(seasonal_sales, aes(x = Month, y = Average.Sales)) +
geom_line() +
geom_point() +
ggtitle("Seasonal Pattern in Sales") +
xlab("Month") +
ylab("Average Sales")
y
library(lubridate)
# Convert Order.Date to datetime format
data$Order.Date <- as.POSIXct(data$Order.Date, format = "%Y-%m-%d %H:%M:%S")
# Extract month from Order.Date
data$Month <- month(data$Order.Date, label = TRUE)
# Summarize total sales by month
monthly_sales <- data %>%
group_by(Month) %>%
summarise(Total.Sales = sum(Sales))
ggplot(monthly_sales, aes(x = Month, y = Total.Sales)) +
geom_bar(stat = "identity") +
ggtitle("Total Sales by Month") +
xlab("Month") +
ylab("Total Sales") +
theme_minimal()
library(lubridate)
# Convert Order.Date to datetime format
data$Order.Date <- as.POSIXct(data$Order.Date, format = "%Y-%m-%d %H:%M:%S")
# Extract month from Order.Date
data$Month <- month(data$Order.Date, label = TRUE)
# Summarize total sales by month
monthly_sales <- data %>%
group_by(Month) %>%
summarise(Total.Sales = sum(Sales))
ggplot(monthly_sales, aes(x = Month, y = Total.Sales)) +
geom_bar(stat = "identity") +
ggtitle("Total Sales by Month") +
xlab("Month") +
ylab("Total Sales") +
theme_minimal()
# Print the month with the highest total sales
print(max_sales_month)
ggplot(seasonal_sales, aes(x = Month, y = Average.Sales)) +
geom_line() +
geom_point() +
ggtitle("Seasonal Pattern in Sales") +
xlab("Month") +
ylab("Average Sales")
# Create a line chart with points for total sales by month
ggplot(monthly_sales, aes(x = Month, y = Total.Sales, group = 1)) +
geom_line() +
geom_point() +
ggtitle("Total Sales by Month") +
xlab("Month") +
ylab("Total Sales") +
theme_minimal()
library(lubridate)
# Check for seasonal patterns in sales
seasonal_sales <- data %>%
group_by(Month) %>%
summarise(Average.Sales = mean(Sales))
# Create a line chart with points for total sales by month
ggplot(monthly_sales, aes(x = Month, y = Total.Sales, group = 1)) +
geom_line() +
geom_point() +
ggtitle("Total Sales by Month") +
xlab("Month") +
ylab("Total Sales") +
theme_minimal()
library(lubridate)
# Check for seasonal patterns in sales
seasonal_sales <- data %>%
group_by(Month) %>%
summarise(Average.Sales = mean(Sales))
# Create a line chart with points for total sales by month
ggplot(monthly_sales, aes(x = Month, y = Total.Sales, group = 1)) +
geom_line() +
geom_point() +
ggtitle("Total Sales by Month") +
xlab("Month") +
ylab("Total Sales") +
theme_minimal()
# Check for seasonal patterns in sales
seasonal_sales <- data %>%
group_by(Month) %>%
summarise(Average.Sales = mean(Sales))
# Create a line chart with points for total sales by month
ggplot(monthly_sales, aes(x = Month, y = Total.Sales, group = 1)) +
geom_line() +
geom_point() +
ggtitle("Total Sales by Month") +
xlab("Month") +
ylab("Total Sales") +
theme_minimal()
# Summarize total sales by hour
hourly_sales <- data %>%
group_by(Hour) %>%
summarise(Total.Sales = sum(Sales))
# Print the summarized data
print(hourly_sales)
# Create a line chart for total sales by hour
ggplot(hourly_sales, aes(x = Hour, y = Total.Sales)) +
geom_line() +
geom_point() +
ggtitle("Total Sales by Hour of the Day") +
xlab("Hour of the Day") +
ylab("Total Sales") +
theme_minimal()
peak_sales_hour <- hourly_sales %>%
filter(Total.Sales == max(Total.Sales))
# Print the peak sales hour
print(peak_sales_hour)
peak_sales_hour <- hourly_sales %>%
filter(Total.Sales == min(Total.Sales))
# Print the peak sales hour
print(peak_sales_hour)
library(lubridate)
# Summarize total sales by hour
hourly_sales <- data %>%
group_by(Hour) %>%
summarise(Total.Sales = sum(Sales))
# Print the summarized data
print(hourly_sales)
# Create a line chart for total sales by hour
ggplot(hourly_sales, aes(x = Hour, y = Total.Sales)) +
geom_line() +
geom_point() +
ggtitle("Total Sales by Hour of the Day") +
xlab("Hour of the Day") +
ylab("Total Sales") +
theme_minimal()
library(lubridate)
# Summarize total sales by hour
hourly_sales <- data %>%
group_by(Hour) %>%
summarise(Total.Sales = sum(Sales))
# Create a line chart for total sales by hour
ggplot(hourly_sales, aes(x = Hour, y = Total.Sales)) +
geom_line() +
geom_point() +
ggtitle("Total Sales by Hour of the Day") +
xlab("Hour of the Day") +
ylab("Total Sales") +
theme_minimal()
